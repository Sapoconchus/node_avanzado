---
swagger: "2.0"
info:
  description: "AnunciaLOL API user guide and tryout"
  version: "0.0.1"
  title: "AnunciaLOL"
host: "anuncialol.swagger.io"
basePath: "/v0"
tags:
- name: "ads"
  description: "Ad management: displaying and CRUD"
- name: "users"
  description: "Operations about user: register and login"
schemes:
- "https"
- "http"
produces:
- "application/json"
paths:
  /ads:
    get:
      tags:
      - "ads"
      summary: "display ads"
      description: " you can pass query strings to filter, sort, limit, skip and select\
        \ fields.This way 'anuncialol.swagger.io/ads?title=house&price=-600000' would\
        \ filter ads with a title 'house' and a price under 600000"
      operationId: "adsGET"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "The numbers of items to return."
        required: false
        type: "integer"
      responses:
        "200":
          description: "success"
        "404":
          description: "Not found"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
  /ads/{id}:
    get:
      tags:
      - "ads"
      summary: "display an Ad by its ID"
      description: "returnns a single AD"
      operationId: "adsIdGET"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the id of the ad to be displayed"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
        "404":
          description: "not found"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
    put:
      tags:
      - "ads"
      summary: "update an AD. Need to be logged in and be the owner of the Ad"
      description: "change any information input or create a new one. For image (cover\
        \ and pictures) management, there are explicit path operation"
      operationId: "adsIdPUT"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "the changes to upload to the AD"
        required: true
        schema:
          $ref: "#/definitions/Ad"
      - name: "id"
        in: "path"
        description: "the id of the ad to be displayed"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
        "401":
          description: "user not logged in"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
    delete:
      tags:
      - "ads"
      summary: "delete an Ad"
      description: "you must own the Ad and be logged in to delete an Ad. Deleting\
        \ an Ad will also erase al pictures uploded to the API linked to it"
      operationId: "adsIdDELETE"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the id of the ad to be displayed"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
        "404":
          description: "not found"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
  /ads/create:
    post:
      tags:
      - "ads"
      summary: "create and upload a new Ad"
      description: "you need to be logged in to create a new Ad. The Ad will be linked\
        \ to the user ID so only the user can update or delete it."
      operationId: "adsCreatePOST"
      consumes:
      - "application/data-form"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "the Ad to be uploaded"
        required: true
        schema:
          $ref: "#/definitions/Ad"
      responses:
        "200":
          description: "success"
        "401":
          description: "user not logged in"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
  /ads/pics/{id}:
    post:
      tags:
      - "ads"
      summary: "ad pictures to Ad"
      description: "you need to own and be logged in to update a new Ad. The pictures\
        \ upload will overwrite the pictures of the ad, so if you want to keep old\
        \ pictures you should pass them on the array."
      operationId: "adsPicsIdPOST"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "picture1"
        in: "formData"
        required: true
        type: "file"
      - name: "picture2"
        in: "formData"
        required: false
        type: "file"
      - name: "picture3"
        in: "formData"
        required: false
        type: "file"
      - name: "picture4"
        in: "formData"
        required: false
        type: "file"
      - name: "picture5"
        in: "formData"
        required: false
        type: "file"
      - name: "picture6"
        in: "formData"
        required: false
        type: "file"
      - name: "picture7"
        in: "formData"
        required: false
        type: "file"
      - name: "picture8"
        in: "formData"
        required: false
        type: "file"
      - name: "id"
        in: "path"
        description: "the id of the ad to add images to"
        required: true
        type: "string"
      responses:
        "200":
          description: "success"
        "401":
          description: "user not logged in"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
  /ads/cover/{id}:
    post:
      tags:
      - "ads"
      summary: "modify cover picture of Ad"
      description: "you need to own and be logged in to update an Ad."
      operationId: "adsCoverIdPOST"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "the id of the ad to add images to"
        required: true
        type: "string"
      - name: "cover"
        in: "formData"
        description: "image to upload"
        required: true
        type: "file"
      responses:
        "200":
          description: "success"
        "401":
          description: "user not logged in"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Ads"
  /users/register:
    post:
      tags:
      - "users"
      summary: "Create user"
      description: "Create a user on the application"
      operationId: "usersRegisterPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "success"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Users"
  /users/login:
    post:
      tags:
      - "users"
      summary: "User access to application"
      description: "it is necessaary to have access to user's ads in order to edit\
        \ or delete. It creates a cookie on localStore with a session expiring date\
        \ unless especified otherwise"
      operationId: "usersLoginPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user data"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "success"
        "500":
          description: "server/API error"
      x-swagger-router-controller: "Users"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      password:
        type: "string"
      remember:
        type: "boolean"
  Ad:
    type: "object"
    required:
    - "price"
    - "type"
    properties:
      title:
        type: "string"
        example: "house"
      price:
        type: "integer"
        format: "int64"
        example: 60000
      city:
        type: "string"
        example: "Madrid"
      cover:
        type: "string"
        example: "/ad_pics/485623354.jpeg"
      pictures:
        type: "array"
        items:
          type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      type:
        type: "boolean"
